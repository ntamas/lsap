name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-15]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_wheel_wasm:
    name: Build wheels for WebAssembly
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.14"

      - uses: mymindstorm/setup-emsdk@v12
        with:
          version: "3.1.32"
          actions-cache-folder: "emsdk-cache"

      - name: Build wheel
        run: |
          pip install pyodide-build==0.23.4
          pyodide build

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-wasm
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Exclude WASM wheels
        run: rm dist/*wasm*.whl

      - uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
